@page "/fetchdata"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Kritikos.Sphinx.Web.Server.Models.API
@using Kritikos.Sphinx.Web.Server.Models
@attribute [Authorize]
@inject ILogger<FetchData> Logger
@inject ISphinxApi Api

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
  <p>
    <em>Loading...</em>
  </p>
}
else
{
  <table class="table">
    <thead>
    <tr>
      <th>Date</th>
      <th>Temp. (C)</th>
      <th>Temp. (F)</th>
      <th>Summary</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var forecast in forecasts)
    {
      <tr>
        <td>@forecast.Date.ToShortDateString()</td>
        <td>@forecast.TemperatureC</td>
        <td>@forecast.TemperatureF</td>
        <td>@forecast.Summary</td>
      </tr>
    }
    </tbody>
  </table>
}

@code {
  private WeatherForecast[] forecasts = Array.Empty<WeatherForecast>();

  protected override async Task OnInitializedAsync()
  {
    try
    {
      forecasts = (await Api.GetForecast()).ToArray();
    }
    catch (AccessTokenNotAvailableException exception)
    {
      exception.Redirect();
    }
  }

}
